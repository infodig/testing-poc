# Create ecom temporary location
- name: Create Temporary Directory for ecom 
  tempfile:
    path: "{{ app_root_directory }}/tmp"
    state: directory
    prefix: "ecom-"
  register: ecom-temp-location
  tags:
    - all
    - ecom

# Download and extract module
- name: Download ecom installable Artifact
  copy:
    src: "ecompack"
    dest: "{{ ecom-temp-location.path }}"
  tags:
    - all
    - ecom

- name: Extract {{ siteName }}-{{ ecom-version }}.zip installable
  unarchive:
    src: "{{ ecom-temp-location.path }}/{{ siteName }}-{{ ecom-version }}.zip"
    dest: "{{ ecom-temp-location.path }}"
    remote_src: yes
  tags:
    - all
    - ecom

# Create folder for ecom pack
- name: Create ecompack directory
  file:
    path: "{{ app_root_directory }}/apache2/htdocs/{{ siteName }}"
    state: directory
    mode: 0755
  tags:
    - all
    - ecom

# Copy config and properties file in the path
#-name: copy properties and config file
# template:
#   src: "xxxxx.cnf"
#  dest: "{{ ecom-temp-location.path }}/foldername/finalefilename.cnf"
# run_once: false
# tags:
#   - all
#   - ecom

# Setup ecom on web server
- name: Copy ecom pack to final path and make it ready for installation
  copy:
    src: "{{ ecom-temp-location.path }}"
    dest: "{{ app_root_directory }}/apache2/htdocs/{{ siteName }}/"
  tags:
    - all
    - ecom

# Generating a version.dat file for the application
- name: Creating content through shell command for version.dat
  shell: echo {{ siteName }}-{{ ecom-version }}
  register: versiondat
  tags:
    - all
    - ecom

- name: Moving file inside the ecom pack 
  copy:
    content: "{{ versiondat.stdout }}"
    dest: "{{ app_root_directory }}/apache2/htdocs/{{ siteName }}/version.dat"
  tags:
    - all
    - ecom

 # Cleaning of temp directory
- name: Clean ecom temp location
  file:
    state: absent
    path: "{{ ecom-temp-location.path }}"
  tags:
    - all
    - ecom
